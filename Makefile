#############################################################################
# Makefile for building: wavemesh
# Generated by qmake (2.01a) (Qt 4.7.1) on: Thu Nov 18 23:00:15 2010
# Project:  wavemesh-0.5.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile wavemesh-0.5.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -march=i686 -mtune=generic -O2 -pipe -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -march=i686 -mtune=generic -O2 -pipe -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtOpenGL -I/usr/include -I. -Isrc -I/usr/X11R6/include -I.
LINK          = g++
LFLAGS        = -Wl,--hash-style=gnu -Wl,--as-needed -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -lQtOpenGL -lQtGui -lQtCore -lGLU -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = src/cfg_widgets.cpp \
		src/main.cpp \
		src/sensor.cpp \
		src/wave_sim.cpp \
		src/wave_widget.cpp moc_cfg_widgets.cpp \
		moc_sensor.cpp \
		moc_wave_widget.cpp
OBJECTS       = cfg_widgets.o \
		main.o \
		sensor.o \
		wave_sim.o \
		wave_widget.o \
		moc_cfg_widgets.o \
		moc_sensor.o \
		moc_wave_widget.o
DIST          = /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/opengl.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		wavemesh-0.5.pro
QMAKE_TARGET  = wavemesh
DESTDIR       = 
TARGET        = wavemesh

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: wavemesh-0.5.pro  /usr/share/qt/mkspecs/linux-g++/qmake.conf /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/opengl.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtOpenGL.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile wavemesh-0.5.pro
/usr/share/qt/mkspecs/common/g++.conf:
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/release.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/opengl.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtOpenGL.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile wavemesh-0.5.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/wavemesh1.0.0 || $(MKDIR) .tmp/wavemesh1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/wavemesh1.0.0/ && $(COPY_FILE) --parents src/cfg_widgets.h src/sensor.h src/wave_sim.h src/wave_widget.h .tmp/wavemesh1.0.0/ && $(COPY_FILE) --parents src/cfg_widgets.cpp src/main.cpp src/sensor.cpp src/wave_sim.cpp src/wave_widget.cpp .tmp/wavemesh1.0.0/ && (cd `dirname .tmp/wavemesh1.0.0` && $(TAR) wavemesh1.0.0.tar wavemesh1.0.0 && $(COMPRESS) wavemesh1.0.0.tar) && $(MOVE) `dirname .tmp/wavemesh1.0.0`/wavemesh1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/wavemesh1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_cfg_widgets.cpp moc_sensor.cpp moc_wave_widget.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_cfg_widgets.cpp moc_sensor.cpp moc_wave_widget.cpp
moc_cfg_widgets.cpp: src/wave_sim.h \
		src/wave_widget.h \
		src/cfg_widgets.h
	/usr/bin/moc $(DEFINES) $(INCPATH) src/cfg_widgets.h -o moc_cfg_widgets.cpp

moc_sensor.cpp: src/sensor.h
	/usr/bin/moc $(DEFINES) $(INCPATH) src/sensor.h -o moc_sensor.cpp

moc_wave_widget.cpp: src/wave_sim.h \
		src/wave_widget.h
	/usr/bin/moc $(DEFINES) $(INCPATH) src/wave_widget.h -o moc_wave_widget.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

cfg_widgets.o: src/cfg_widgets.cpp src/cfg_widgets.h \
		src/wave_sim.h \
		src/wave_widget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cfg_widgets.o src/cfg_widgets.cpp

main.o: src/main.cpp src/wave_widget.h \
		src/wave_sim.h \
		src/cfg_widgets.h \
		src/sensor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o src/main.cpp

sensor.o: src/sensor.cpp src/sensor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sensor.o src/sensor.cpp

wave_sim.o: src/wave_sim.cpp src/wave_sim.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wave_sim.o src/wave_sim.cpp

wave_widget.o: src/wave_widget.cpp src/wave_widget.h \
		src/wave_sim.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wave_widget.o src/wave_widget.cpp

moc_cfg_widgets.o: moc_cfg_widgets.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cfg_widgets.o moc_cfg_widgets.cpp

moc_sensor.o: moc_sensor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sensor.o moc_sensor.cpp

moc_wave_widget.o: moc_wave_widget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_wave_widget.o moc_wave_widget.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

